{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-91512f9c8eb82dc1.js","src/js/app.js","src/js/search-movies.js","node_modules/@parcel/runtime-js/lib/runtime-7d71a845b9eb3fac.js","src/js/pagination.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"eFRlh\\\":\\\"index.a4bef846.js\\\",\\\"625wv\\\":\\\"no-poster-available.56eb009a.jpg\\\",\\\"bSbOs\\\":\\\"library.c85453d1.css\\\",\\\"jZDhz\\\":\\\"index.f2964efa.js\\\"}\"));","import { fetchMovies, loadMovies, renderMoviesCards } from './fetch-data.js';\nimport { fetchMoviesByTitle } from './search-movies.js';\nimport { updatePagination, normalizeBeforeAfterPages, currentPage } from './pagination';\n\nlet totalPages;\nlet movieTitle = null;\n\nconst searchBtn = document.querySelector('.search-form__button');\nconst input = document.querySelector('.search-form__input');\n\n///////////////////////////////\n// ŁADOWANIE POPULARNYCH FILMÓW\n///////////////////////////////\ndocument.addEventListener('DOMContentLoaded', async () => {\n  const data = await fetchMovies(1);\n  await loadMovies(1);\n  totalPages = 500;\n  normalizeBeforeAfterPages();\n  updatePagination();\n});\n\n///////////////////////////////\n// WYSZUKIWARKA FILMÓW\n///////////////////////////////\nasync function searchMovies(e) {\n  e.preventDefault();\n  movieTitle = input.value.trim();\n  const data = await fetchMoviesByTitle(1, movieTitle);\n  renderMoviesCards(data.results);\n  totalPages = data.total_pages;\n  normalizeBeforeAfterPages(true);\n  updatePagination();\n}\n\nsearchBtn.addEventListener('click', searchMovies);\n\nexport { totalPages, movieTitle };\n","import { addModalListenerFunction, getGenresNames } from './fetch-data';\nimport noMoviePoster from '../images/no-poster-available.jpg';\nimport Notiflix from 'notiflix';\n\nconst API_KEY = '50faffa66bb05e881b7f3de0b265b30c';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst SEARCH_MOVIE_PATH = `/search/movie`;\nconst galleryOfMovies = document.querySelector('.movie-gallery');\nconst errorMsg = document.querySelector('.error-message');\nconst pagination = document.querySelector('.pagination');\n\nasync function fetchMoviesByTitle(page, movieTitle) {\n  const response = await fetch(\n    `${BASE_URL}${SEARCH_MOVIE_PATH}?api_key=${API_KEY}&page=${page}&query=${movieTitle}`,\n  );\n  const data = await response.json();\n  return data;\n}\n\nasync function loadMoviesFromInput(page, title) {\n  try {\n    Notiflix.Loading.arrows({\n      svgSize: '80px',\n      svgColor: '#ff6b08',\n      backgroundColor: 'rgba(255, 255, 255, 0.5)',\n    });\n    const data = await fetchMoviesByTitle(page, title);\n    if (data.total_results === 0) {\n      pagination.style.display = 'none';\n      errorMsg.textContent = 'Search result not successful. Enter the correct movie name';\n      errorMsg.style.display = 'flex';\n      clearInterfaceUI();\n    } else {\n      pagination.style.display = 'flex';\n      errorMsg.style.display = 'none';\n      clearInterfaceUI();\n      renderMoviesCardsFromInput(data.results);\n    }\n    Notiflix.Loading.remove();\n  } catch (error) {\n    console.error(error);\n    Notiflix.Loading.remove();\n  }\n}\n\nfunction clearInterfaceUI() {\n  galleryOfMovies.innerHTML = '';\n  Notiflix.Loading.arrows({\n    svgColor: '#ff6b08',\n  });\n}\n\nasync function renderMoviesCardsFromInput(movies) {\n  const markup = movies\n    .map(({ poster_path, title, name, genre_ids, id, release_date, first_air_date }) => {\n      const movieGenres = getGenresNames(genre_ids);\n      const releaseDate = (release_date || first_air_date || '').slice(0, 4);\n      const movieTitle = title ? title : name;\n      const moviePoster =\n        poster_path != null ? `https://image.tmdb.org/t/p/w500${poster_path}` : noMoviePoster;\n      return `\n          <li class=\"movie-card\" data-id=\"${id}\" data-type=\"movie\" data-modal-open>\n            <div class=\"movie-card__box\">\n              <img class=\"movie-card__img\" src=\"${moviePoster}\" data-img=\"${moviePoster}\" loading=\"lazy\" alt=\"${movieTitle}\" />\n            </div>\n            <h2 class=\"movie-card__heading\">${movieTitle}</h2>\n            <span class=\"movie-card__caption\">${movieGenres} | ${releaseDate}</span>\n          </li>\n          `;\n    })\n    .join('');\n\n  galleryOfMovies.innerHTML = markup;\n  addModalListenerFunction(); // nasłuchiwanie na kliknięcia po załadowaniu elementów\n}\n\nexport { fetchMoviesByTitle, loadMoviesFromInput };\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"625wv\")).toString();","import { loadMovies } from './fetch-data.js';\nimport { loadMoviesFromInput } from './search-movies.js';\nimport { totalPages, movieTitle } from './app.js';\n\nlet currentPage = 1;\n\n//SZUKANIE ELEMENTÓW\nconst prevButton = document.querySelector('.arrow__left');\nconst firstPage = document.querySelector('.first');\nconst dotsPage = document.querySelector('.dots');\nconst prevPage2 = document.querySelector('.minus-2');\nconst prevPage1 = document.querySelector('.minus-1');\nconst currentPageElement = document.querySelector('.active');\nconst nextPage1 = document.querySelector('.plus-1');\nconst nextPage2 = document.querySelector('.plus-2');\nconst dotsPageLast = document.querySelector('.dots__last');\nconst lastPage = document.querySelector('.last');\nconst nextButton = document.querySelector('.arrow__right');\n\nfunction updatePagination() {\n  prevPage2.textContent = currentPage - 2;\n  prevPage1.textContent = currentPage - 1;\n  currentPageElement.textContent = currentPage;\n  nextPage1.textContent = currentPage + 1;\n  nextPage2.textContent = currentPage + 2;\n  lastPage.textContent = totalPages;\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\n//HIDDEN\nfunction hideElement(element) {\n  element.classList.add('hidden');\n}\nfunction showElement(element) {\n  element.classList.remove('hidden');\n}\n\n// SYLWIA - PAGINACJANA SZYBKO DO WYSZUKIWARKI FILMÓW\nasync function normalizeBeforeAfterPages(resetPages) {\n  if (resetPages === true) {\n    currentPage = 1;\n  }\n\n  if (currentPage === 1 && totalPages === 1) {\n    hideElement(firstPage);\n    hideElement(dotsPage);\n    hideElement(prevPage1);\n    hideElement(prevPage2);\n    hideElement(nextPage1);\n    hideElement(nextPage2);\n    hideElement(dotsPageLast);\n    hideElement(lastPage);\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n    updatePagination();\n  }\n\n  if (totalPages === 2) {\n    if (currentPage === 1) {\n      hideElement(firstPage);\n      hideElement(dotsPage);\n      hideElement(prevPage1);\n      hideElement(prevPage2);\n      hideElement(nextPage1);\n      hideElement(nextPage2);\n      hideElement(dotsPageLast);\n      showElement(lastPage);\n      if (movieTitle) {\n        await loadMoviesFromInput(currentPage, movieTitle);\n      } else {\n        await loadMovies(currentPage);\n      }\n      updatePagination();\n    }\n\n    if (currentPage === 2) {\n      showElement(firstPage);\n      hideElement(dotsPage);\n      hideElement(prevPage1);\n      hideElement(prevPage2);\n      hideElement(nextPage1);\n      hideElement(nextPage2);\n      hideElement(dotsPageLast);\n      hideElement(lastPage);\n      if (movieTitle) {\n        await loadMoviesFromInput(currentPage, movieTitle);\n      } else {\n        await loadMovies(currentPage);\n      }\n      updatePagination();\n    }\n  }\n\n  /////////////////////\n  /////////////////////\n\n  if (currentPage === 1) {\n    currentPage = 1;\n    hideElement(firstPage);\n    hideElement(dotsPage);\n    hideElement(prevPage2);\n    hideElement(prevPage1);\n    showElement(nextPage1);\n    showElement(nextPage2);\n    showElement(dotsPageLast);\n    showElement(lastPage);\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n    updatePagination();\n  }\n  if (currentPage === 2) {\n    currentPage = +2;\n    hideElement(firstPage);\n    hideElement(dotsPage);\n    hideElement(prevPage2);\n    showElement(prevPage1);\n    showElement(nextPage1);\n    showElement(nextPage2);\n    showElement(dotsPageLast);\n    showElement(lastPage);\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n\n    updatePagination();\n  }\n  if (currentPage === 3) {\n    currentPage = +3;\n    hideElement(firstPage);\n    hideElement(dotsPage);\n    showElement(prevPage2);\n    showElement(prevPage1);\n    showElement(nextPage1);\n    showElement(nextPage2);\n    showElement(dotsPageLast);\n    showElement(lastPage);\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n    updatePagination();\n  }\n  if (currentPage === 4) {\n    currentPage = +4;\n    showElement(firstPage);\n    hideElement(dotsPage);\n    showElement(prevPage2);\n    showElement(prevPage1);\n    showElement(nextPage1);\n    showElement(nextPage2);\n    showElement(dotsPageLast);\n    showElement(lastPage);\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n    updatePagination();\n  }\n\n  if (currentPage === totalPages - 7) {\n    currentPage = currentPage;\n    hideElement(firstPage);\n    hideElement(dotsPage);\n    hideElement(prevPage2);\n    showElement(nextPage1);\n    showElement(nextPage2);\n    showElement(dotsPageLast);\n    showElement(lastPage);\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n    updatePagination();\n  }\n\n  if (currentPage === totalPages - 6) {\n    currentPage = currentPage;\n    hideElement(dotsPage);\n    hideElement(prevPage2);\n    showElement(nextPage1);\n    showElement(nextPage2);\n    showElement(dotsPageLast);\n    showElement(lastPage);\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n    updatePagination();\n  }\n\n  if (currentPage === totalPages - 5) {\n    currentPage = currentPage;\n    hideElement(dotsPage);\n    showElement(nextPage1);\n    showElement(nextPage2);\n    showElement(dotsPageLast);\n    showElement(lastPage);\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n    updatePagination();\n  }\n\n  if (currentPage === totalPages - 4) {\n    currentPage = currentPage;\n    showElement(nextPage1);\n    showElement(nextPage2);\n    showElement(dotsPageLast);\n    showElement(lastPage);\n\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n    updatePagination();\n  }\n  if (currentPage === totalPages - 3) {\n    currentPage = currentPage;\n    showElement(nextPage1);\n    showElement(nextPage2);\n    hideElement(dotsPageLast);\n    showElement(lastPage);\n    updatePagination();\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n  }\n  if (currentPage === totalPages - 2) {\n    currentPage = currentPage;\n\n    showElement(nextPage1);\n    hideElement(nextPage2);\n    hideElement(dotsPageLast);\n    showElement(lastPage);\n\n    updatePagination();\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n  }\n  if (currentPage === totalPages - 1) {\n    currentPage = currentPage;\n\n    hideElement(nextPage1);\n    hideElement(nextPage2);\n    hideElement(dotsPageLast);\n    showElement(lastPage);\n    updatePagination();\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n  }\n  if (currentPage === totalPages) {\n    currentPage = currentPage;\n\n    hideElement(nextPage1);\n    hideElement(nextPage2);\n    hideElement(dotsPageLast);\n    hideElement(lastPage);\n    updatePagination();\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n  }\n\n  if (totalPages >= 5 && currentPage >= 5) {\n    showElement(firstPage);\n    showElement(dotsPage);\n    showElement(prevPage1);\n    showElement(prevPage2);\n    updatePagination();\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n  }\n\n  ///////////////////////////////////////////\n  // PAGINACJA ASI\n  ///////////////////////////////////////////\n\n  if (totalPages === 500) {\n    if (currentPage <= totalPages - 5 && currentPage > 4) {\n      currentPage = currentPage;\n      showElement(firstPage);\n      showElement(dotsPage);\n      showElement(prevPage2);\n      showElement(prevPage1);\n      showElement(nextPage1);\n      showElement(nextPage2);\n      showElement(dotsPageLast);\n      showElement(lastPage);\n      if (movieTitle) {\n        await loadMoviesFromInput(currentPage, movieTitle);\n      } else {\n        await loadMovies(currentPage);\n      }\n      updatePagination();\n    }\n\n    if (currentPage === totalPages - 4 && currentPage > 4) {\n      currentPage = currentPage;\n      showElement(firstPage);\n      showElement(dotsPage);\n      showElement(prevPage1);\n      showElement(prevPage2);\n      showElement(nextPage1);\n      showElement(nextPage2);\n      showElement(dotsPageLast);\n      showElement(lastPage);\n      if (movieTitle) {\n        await loadMoviesFromInput(currentPage, movieTitle);\n      } else {\n        await loadMovies(currentPage);\n      }\n      updatePagination();\n    }\n    if (currentPage === totalPages - 3 && currentPage > 8) {\n      currentPage = currentPage;\n      showElement(firstPage);\n      showElement(dotsPage);\n      showElement(prevPage1);\n      showElement(prevPage2);\n      showElement(nextPage1);\n      showElement(nextPage2);\n      hideElement(dotsPageLast);\n      showElement(lastPage);\n      updatePagination();\n      if (movieTitle) {\n        await loadMoviesFromInput(currentPage, movieTitle);\n      } else {\n        await loadMovies(currentPage);\n      }\n    }\n    if (currentPage === totalPages - 2 && currentPage > 8) {\n      currentPage = currentPage;\n      showElement(firstPage);\n      showElement(dotsPage);\n      showElement(prevPage1);\n      showElement(prevPage2);\n      showElement(nextPage1);\n      showElement(nextPage2);\n      hideElement(dotsPageLast);\n      hideElement(lastPage);\n      updatePagination();\n      if (movieTitle) {\n        await loadMoviesFromInput(currentPage, movieTitle);\n      } else {\n        await loadMovies(currentPage);\n      }\n    }\n    if (currentPage === totalPages - 1 && currentPage > 8) {\n      currentPage = currentPage;\n      showElement(firstPage);\n      showElement(dotsPage);\n      showElement(prevPage1);\n      showElement(prevPage2);\n      showElement(nextPage1);\n      hideElement(nextPage2);\n      hideElement(dotsPageLast);\n      hideElement(lastPage);\n      updatePagination();\n      if (movieTitle) {\n        await loadMoviesFromInput(currentPage, movieTitle);\n      } else {\n        await loadMovies(currentPage);\n      }\n    }\n    if (currentPage === totalPages && currentPage > 8) {\n      currentPage = currentPage;\n      showElement(firstPage);\n      showElement(dotsPage);\n      showElement(prevPage1);\n      showElement(prevPage2);\n      hideElement(nextPage1);\n      hideElement(nextPage2);\n      hideElement(dotsPageLast);\n      hideElement(lastPage);\n      updatePagination();\n      if (movieTitle) {\n        await loadMoviesFromInput(currentPage, movieTitle);\n      } else {\n        await loadMovies(currentPage);\n      }\n    }\n  }\n  ///////////////////////////////////////////\n}\n\n//EVENT LISTENER\nfirstPage.addEventListener('click', () => {\n  if ((currentPage = 1)) {\n    normalizeBeforeAfterPages();\n  }\n});\n\nlastPage.addEventListener('click', () => {\n  if ((currentPage = totalPages)) {\n    normalizeBeforeAfterPages();\n  }\n});\n\nprevPage2.addEventListener('click', () => {\n  if (currentPage > 2) {\n    currentPage -= 2;\n    normalizeBeforeAfterPages();\n  }\n});\n\nprevPage1.addEventListener('click', () => {\n  if (currentPage > 1) {\n    currentPage -= 1;\n    normalizeBeforeAfterPages();\n  }\n});\n\nnextPage1.addEventListener('click', () => {\n  if (currentPage < totalPages) {\n    currentPage += 1;\n    normalizeBeforeAfterPages();\n  }\n});\n\nnextPage2.addEventListener('click', () => {\n  if (currentPage < totalPages) {\n    currentPage += 2;\n    normalizeBeforeAfterPages();\n  }\n});\n\n//STRZAŁKI\nprevButton.addEventListener('click', () => {\n  if (currentPage > 1) {\n    currentPage -= 1;\n    normalizeBeforeAfterPages();\n  }\n});\n\nnextButton.addEventListener('click', () => {\n  if (currentPage < totalPages) {\n    currentPage += 1;\n    normalizeBeforeAfterPages();\n  }\n});\n\n//PAGINACJA KLAWIATURA\nasync function changePage(newPage) {\n  if (newPage >= 1 && newPage <= totalPages) {\n    currentPage = newPage;\n    if (movieTitle) {\n      await loadMoviesFromInput(currentPage, movieTitle);\n    } else {\n      await loadMovies(currentPage);\n    }\n    normalizeBeforeAfterPages();\n    updatePagination();\n  }\n}\n\ndocument.addEventListener('keydown', event => {\n  const key = event.key;\n  if (key === 'ArrowLeft') {\n    changePage(currentPage - 1);\n  } else if (key === 'ArrowRight') {\n    changePage(currentPage + 1);\n  }\n});\n\nexport { fetchTotalResults, updatePagination, runAsync, normalizeBeforeAfterPages, currentPage };\n"],"names":["parcelRequire","register","JSON","parse","$cSykv","$5342c76462a09b41$exports","URL","resolve","import","meta","url","toString","$05617eee9c720756$var$galleryOfMovies","document","querySelector","$05617eee9c720756$var$errorMsg","$05617eee9c720756$var$pagination","async","$05617eee9c720756$export$a23d28ead3caaecc","page","movieTitle","response","fetch","json","$05617eee9c720756$export$87570cd642f9fd23","title","$parcel$interopDefault","$7IoHk","Loading","arrows","svgSize","svgColor","backgroundColor","data","total_results","style","display","textContent","$05617eee9c720756$var$clearInterfaceUI","movies","markup","map","poster_path","name","genre_ids","id","release_date","first_air_date","movieGenres","getGenresNames","releaseDate","slice","moviePoster","join","innerHTML","addModalListenerFunction","$05617eee9c720756$var$renderMoviesCardsFromInput","results","remove","error","console","$baa48fd5a30d32e8$export$385972cd6b54c3e1","$baa48fd5a30d32e8$var$prevButton","$baa48fd5a30d32e8$var$firstPage","$baa48fd5a30d32e8$var$dotsPage","$baa48fd5a30d32e8$var$prevPage2","$baa48fd5a30d32e8$var$prevPage1","$baa48fd5a30d32e8$var$currentPageElement","$baa48fd5a30d32e8$var$nextPage1","$baa48fd5a30d32e8$var$nextPage2","$baa48fd5a30d32e8$var$dotsPageLast","$baa48fd5a30d32e8$var$lastPage","$baa48fd5a30d32e8$var$nextButton","$baa48fd5a30d32e8$export$909ec5aabce1b1f7","$63b7bc300d1cc0b1$export$828d4f39ed844b18","window","scrollTo","top","behavior","$baa48fd5a30d32e8$var$hideElement","element","classList","add","$baa48fd5a30d32e8$var$showElement","$baa48fd5a30d32e8$export$887657ff68805295","resetPages","$63b7bc300d1cc0b1$export$a866758513d5d699","loadMovies","$baa48fd5a30d32e8$var$changePage","newPage","addEventListener","event","key","$63b7bc300d1cc0b1$var$searchBtn","$63b7bc300d1cc0b1$var$input","fetchMovies","e","preventDefault","value","trim","renderMoviesCards","total_pages"],"version":3,"file":"index.a4bef846.js.map"}